// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl
// Solution by Nathanael Whitrow (n8)
// 31/08/2019


/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // need an incrementer, and a reset.
    Or(a=load, b=inc, out=lORi);
    Or(a=reset, b=lORi, out=loader);

    // increment Mux
    Mux16(a=RegOut, b=AdderOut, sel=inc, out=IncMuxOut);
    // Load Mux
    Mux16(a=IncMuxOut, b=in, sel=load, out=LoadMuxOut);
    // Reset Mux
    Mux16(a=LoadMuxOut, b=false, sel=reset, out=ResetMuxOut);

    Add16(a=RegOut, b[0]=true, b[1..15]=false, out=AdderOut);
    Register(in=ResetMuxOut, load=loader, out=out, out=RegOut);
}
